# Generated by Django 4.2 on 2023-11-26 04:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="characters/"),
                ),
                (
                    "activity_1_choices",
                    models.ManyToManyField(
                        blank=True, related_name="a1", to="game.activity"
                    ),
                ),
                (
                    "activity_2_choices",
                    models.ManyToManyField(
                        blank=True, related_name="a2", to="game.activity"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("avatar_url", models.CharField(blank=True, max_length=255, null=True)),
                ("sender", models.CharField(max_length=255)),
                ("text", models.TextField()),
                ("reaction", models.CharField(blank=True, max_length=255, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="GameLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "chat_messages",
                    models.ManyToManyField(
                        blank=True, related_name="game_log", to="game.chatmessage"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GameSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "state",
                    django_fsm.FSMField(
                        choices=[
                            ("initializing", "Initializing"),
                            ("character_creation", "Character Creation"),
                            ("regular_turn", "Regular Turn"),
                            ("inactive", "Inactive"),
                            ("ended", "Ended"),
                        ],
                        default="initializing",
                        max_length=50,
                    ),
                ),
                ("game_id", models.CharField(max_length=255, unique=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Interest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="MoonSignInterpretation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_quarter", models.CharField(max_length=150)),
                ("first_quarter_reason", models.TextField()),
                ("full_moon", models.CharField(max_length=150)),
                ("full_moon_reason", models.TextField()),
                ("last_quarter", models.CharField(max_length=150)),
                ("last_quarter_reason", models.TextField()),
                ("new_moon", models.CharField(max_length=150)),
                ("new_moon_reason", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="NarrativeChoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="narrative_choices"
                    ),
                ),
                ("night_number", models.IntegerField()),
                (
                    "interest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="narrative_choices",
                        to="game.interest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublicProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quality_1", models.CharField(max_length=100)),
                ("quality_2", models.CharField(max_length=100)),
                ("quality_3", models.CharField(max_length=100)),
                ("interest_1", models.CharField(max_length=100)),
                ("interest_2", models.CharField(max_length=100)),
                ("interest_3", models.CharField(max_length=100)),
                ("activity_1", models.CharField(max_length=100)),
                ("activity_2", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name="Word",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("word", models.CharField(max_length=255)),
                ("isSimple", models.BooleanField(default=False)),
                (
                    "kind_of_word",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Quality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("words", models.ManyToManyField(blank=True, to="game.word")),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("character_name", models.CharField(blank=True, max_length=255)),
                (
                    "character_creation_state",
                    django_fsm.FSMField(
                        choices=[
                            (
                                "character_avatar_selection",
                                "Character Avatar Selection",
                            ),
                            ("moon_meaning_selection", "Moon Meaning Selection"),
                            ("public_profile_creation", "Public Profile Creation"),
                            ("character_complete", "Character Complete"),
                        ],
                        default="character_avatar_selection",
                        max_length=50,
                    ),
                ),
                (
                    "character",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="game.character",
                    ),
                ),
                (
                    "character_word_pool",
                    models.ManyToManyField(
                        blank=True, related_name="wp", to="game.word"
                    ),
                ),
                (
                    "game_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_players",
                        to="game.gamesession",
                    ),
                ),
                (
                    "narrative_choice_pool",
                    models.ManyToManyField(blank=True, to="game.narrativechoice"),
                ),
                (
                    "question_pool",
                    models.ManyToManyField(blank=True, to="game.question"),
                ),
                (
                    "simple_word_pool",
                    models.ManyToManyField(
                        blank=True, related_name="swp", to="game.word"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="narrativechoice",
            name="words",
            field=models.ManyToManyField(blank=True, to="game.word"),
        ),
        migrations.CreateModel(
            name="GameTurn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("turn_number", models.IntegerField(default=1)),
                ("narrative_nights", models.IntegerField(default=1)),
                ("player_a_completed_cycle", models.BooleanField(default=False)),
                ("player_b_completed_cycle", models.BooleanField(default=False)),
                ("player_a_narrative_choice_made", models.BooleanField(default=False)),
                ("player_b_narrative_choice_made", models.BooleanField(default=False)),
                (
                    "player_a_moon_phase_message_written",
                    models.BooleanField(default=False),
                ),
                (
                    "player_b_moon_phase_message_written",
                    models.BooleanField(default=False),
                ),
                (
                    "state",
                    django_fsm.FSMField(
                        choices=[
                            ("select_question", "Select Question"),
                            ("answer_question", "Answer Question"),
                            ("react_emoji", "React with Emoji"),
                            ("narrative_choices", "Narrative Choices"),
                            ("moon_phase", "Moon Phase"),
                        ],
                        default="select_question",
                        max_length=50,
                    ),
                ),
                (
                    "active_player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="game.player",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="gamesession",
            name="asked_questions",
            field=models.ManyToManyField(blank=True, to="game.question"),
        ),
        migrations.AddField(
            model_name="gamesession",
            name="current_game_turn",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="parent_game",
                to="game.gameturn",
            ),
        ),
        migrations.AddField(
            model_name="gamesession",
            name="gameLog",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="parent_game",
                to="game.gamelog",
            ),
        ),
        migrations.AddField(
            model_name="gamesession",
            name="playerA",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="player1_sessions",
                to="game.player",
            ),
        ),
        migrations.AddField(
            model_name="gamesession",
            name="playerB",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="player2_sessions",
                to="game.player",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="interest_1_choices",
            field=models.ManyToManyField(
                blank=True, related_name="i1", to="game.interest"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="interest_2_choices",
            field=models.ManyToManyField(
                blank=True, related_name="i2", to="game.interest"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="interest_3_choices",
            field=models.ManyToManyField(
                blank=True, related_name="i3", to="game.interest"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="quality_1_choices",
            field=models.ManyToManyField(
                blank=True, related_name="q1", to="game.quality"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="quality_2_choices",
            field=models.ManyToManyField(
                blank=True, related_name="q2", to="game.quality"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="quality_3_choices",
            field=models.ManyToManyField(
                blank=True, related_name="q3", to="game.quality"
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="questions",
            field=models.ManyToManyField(blank=True, to="game.question"),
        ),
        migrations.AlterUniqueTogether(
            name="narrativechoice",
            unique_together={("interest", "name", "night_number")},
        ),
    ]
